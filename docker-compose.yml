version: '3'

networks:
  prodnetwork:
    driver: bridge

volumes:
  nexus-data:
  jenkins-data:
  sonar-data:
  sonar-extensions:
  sonarqube:
services:
  nexus:
    #image: sonatype/nexus3
    build: ./docker-nexus3
    restart: always
    ports:
      - "18081:8081"
    networks:
      - prodnetwork
    volumes:
      - nexus-data:/nexus-data
  jenkins:
    build: ./jenkins
    restart: always
    environment:
      - JAVA_OPTS=-Duser.timezone=America/Lima
    ports:
      - "18080:8080"
    networks:
      - prodnetwork
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - jenkins-data:/var/jenkins_home
    depends_on:
      - nexus
      - sonar
    environment:
      - NEXUS_PORT=8081
      - SONAR_PORT=9000
      - SONAR_DB_PORT=5432
  sonardb:
    image: orchardup/postgresql:latest
    environment:
      - POSTGRESQL_USER=sonar
      - POSTGRESQL_PASS=sonar
      - POSTGRESQL_DB=sonar
    networks:
      - prodnetwork
    restart: always
    volumes:
      - sonarqube:/var/lib/postgresql
    ports:
      - "5433:5432"
  sonar:
    image: sonarqube
    restart: always
    ports:
     - "19000:9000"
     - "19092:9092"
    networks:
      - prodnetwork
    volumes:
      - sonar-data:/opt/sonarqube/data
      - sonar-extensions:/opt/sonarqube/extensions
    depends_on:
      - sonardb
    environment:
     - SONARQUBE_JDBC_URL=jdbc:postgresql://sonardb:5432/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance
     - SONARQUBE_JDBC_USERNAME=sonar
     - SONARQUBE_JDBC_PASSWORD=sonar

#  localtunnel:
#    build: ./lt
#    command: "usr/local/bin/lt --port 8080 --subdomain mb-home-jenkins"
#    depends_on:
#      - jenkins

  ngrok:
    build: ./ngrok
    restart: always
    ports:
      - "4040:4040"
    networks:
      - prodnetwork
    command: "ngrok http jenkins:8080"
    depends_on:
      - nexus
      - sonar
      - jenkins

##########################################################################################
# DISABLED: GitLab takes too much memory and CPU. Demo uses GitHub repositories instead.
#
#  gitlab:
#    image: gitlab/gitlab-ce:latest
#    restart: always
#    networks:
#      - prodnetwork
#    environment:
#      GITLAB_OMNIBUS_CONFIG: |
#        # external_url 'https://gitlab.example.com'
#        # Add any other gitlab.rb configuration here, each on its own line
#    ports:
#      - "10080:80"
#      - "10443:443"
#      - "10022:22"
#    volumes:
#      - /opt/gitlab/config:/etc/gitlab
#      - /opt/gitlab/logs:/var/log/gitlab
#      - /opt/gitlab/data:/var/opt/gitlab
